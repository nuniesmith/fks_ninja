<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <!-- Target .NET Framework 4.8 (required for NinjaTrader 8) -->
    <TargetFramework>net48</TargetFramework>
    <OutputType>Library</OutputType>
    <AssemblyName>FKS</AssemblyName>
    <RootNamespace>NinjaTrader.NinjaScript</RootNamespace>
    <LangVersion>7.3</LangVersion>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <OutputPath>../bin/$(Configuration)/</OutputPath>
    <DocumentationFile>../bin/$(Configuration)/FKS.xml</DocumentationFile>

    <!-- Project GUID for consistency -->
    <ProjectGuid>{44387377-FCA2-495F-89D1-B7965E67142F}</ProjectGuid>

    <!-- Disable warnings about missing XML documentation -->
    <NoWarn>1591</NoWarn>

    <!-- Enable unsafe code if needed for performance optimizations -->
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>

    <!-- Additional properties for NinjaTrader compatibility -->
    <FileAlignment>512</FileAlignment>
    <Deterministic>true</Deterministic>

    <!-- Let the SDK handle default includes, but we'll exclude what we don't want -->
    <EnableDefaultCompileItems>true</EnableDefaultCompileItems>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
    <Optimize>false</Optimize>
    <PlatformTarget>AnyCPU</PlatformTarget>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
    <PlatformTarget>AnyCPU</PlatformTarget>
  </PropertyGroup>

  <!-- Note: ML files are now included by default EnableDefaultCompileItems setting -->
  <!-- The SDK automatically includes all .cs files, so we don't need explicit includes -->

  <!-- NinjaTrader References (using relative paths from src/ directory) -->
  <ItemGroup>
    <Reference Include="NinjaTrader.Core">
      <HintPath>../references/NinjaTrader.Core.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="NinjaTrader.Custom">
      <HintPath>../references/NinjaTrader.Custom.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="NinjaTrader.Gui">
      <HintPath>../references/NinjaTrader.Gui.dll</HintPath>
      <Private>false</Private>
    </Reference>
  </ItemGroup>

  <!-- WPF References (required for NinjaTrader UI components) -->
  <ItemGroup>
    <Reference Include="PresentationCore">
      <HintPath>../references/PresentationCore.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="PresentationFramework">
      <HintPath>../references/PresentationFramework.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="WindowsBase" />
    <Reference Include="System.Xaml">
      <HintPath>../references/System.Xaml.dll</HintPath>
      <Private>false</Private>
    </Reference>
  </ItemGroup>

  <!-- System References -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Data" />
    <Reference Include="System.Drawing" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.ComponentModel.DataAnnotations" />
    <Reference Include="System.Runtime.Serialization" />
  </ItemGroup>

  <!-- NuGet Packages - Exclude from output to avoid conflicts with NinjaTrader -->
  <ItemGroup>
    <PackageReference Include="System.ValueTuple" Version="4.5.0">
      <Private>false</Private>
      <ExcludeAssets>runtime</ExcludeAssets>
    </PackageReference>
    <PackageReference Include="System.Memory" Version="4.5.5">
      <Private>false</Private>
      <ExcludeAssets>runtime</ExcludeAssets>
    </PackageReference>
    <PackageReference Include="System.Numerics.Vectors" Version="4.5.0">
      <Private>false</Private>
      <ExcludeAssets>runtime</ExcludeAssets>
    </PackageReference>
    
    <!-- SharpDX for advanced rendering (used by FKS_Dashboard) -->
    <PackageReference Include="SharpDX" Version="4.2.0">
      <Private>false</Private>
      <ExcludeAssets>runtime</ExcludeAssets>
    </PackageReference>
    <PackageReference Include="SharpDX.Direct2D1" Version="4.2.0">
      <Private>false</Private>
      <ExcludeAssets>runtime</ExcludeAssets>
    </PackageReference>
    <!-- DirectWrite package name may be different - commented out for now -->
    <!--
    <PackageReference Include="SharpDX.DirectWrite" Version="4.2.0">
      <Private>false</Private>
      <ExcludeAssets>runtime</ExcludeAssets>
    </PackageReference>
    <PackageReference Include="SharpDX.DXGI" Version="4.2.0">
      <Private>false</Private>
      <ExcludeAssets>runtime</ExcludeAssets>
    </PackageReference>
    -->
  </ItemGroup>

  <!-- Build Events -->
  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <Message Text="FKS build completed: $(TargetPath)" Importance="high" />
    <Message Text="Output directory: $(OutputPath)" Importance="high" />
  </Target>

  <!-- Custom target for creating NinjaTrader package -->
  <Target Name="PackageNT8" DependsOnTargets="Build">
    <PropertyGroup>
      <PackageDir>../packages</PackageDir>
      <PackageVersion>1.0.0</PackageVersion>
      <PackageName>fks_trading-system-v$(PackageVersion)</PackageName>
    </PropertyGroup>

    <MakeDir Directories="$(PackageDir)/temp/bin/Custom/Indicators" />
    <MakeDir Directories="$(PackageDir)/temp/bin/Custom/Strategies" />
    <MakeDir Directories="$(PackageDir)/temp/bin/Custom/AddOns" />
    <MakeDir Directories="$(PackageDir)/temp/bin" />

    <!-- Copy compiled DLL -->
    <Copy SourceFiles="$(OutputPath)FKS.dll" DestinationFolder="$(PackageDir)/temp/bin" Condition="Exists('$(OutputPath)FKS.dll')" />

    <!-- Copy AddOns from AddOns subdirectory -->
    <Copy SourceFiles="AddOns/FKS_Calculations.cs" DestinationFolder="$(PackageDir)/temp/bin/Custom/AddOns" Condition="Exists('AddOns/FKS_Calculations.cs')" />
    <Copy SourceFiles="AddOns/FKS_Core.cs" DestinationFolder="$(PackageDir)/temp/bin/Custom/AddOns" Condition="Exists('AddOns/FKS_Core')" />
    <Copy SourceFiles="AddOns/FKS_Infrastructure.cs" DestinationFolder="$(PackageDir)/temp/bin/Custom/AddOns" Condition="Exists('AddOns/FKS_Infrastructure.cs')" />
    <Copy SourceFiles="AddOns/FKS_Market.cs" DestinationFolder="$(PackageDir)/temp/bin/Custom/AddOns" Condition="Exists('AddOns/FKS_Market.cs')" />
    <Copy SourceFiles="AddOns/FKS_Signals.cs" DestinationFolder="$(PackageDir)/temp/bin/Custom/AddOns" Condition="Exists('AddOns/FKS_Signals.cs')" />

    <!-- Copy Indicators from Indicators subdirectory -->
    <Copy SourceFiles="Indicators/FKS_AI.cs" DestinationFolder="$(PackageDir)/temp/bin/Custom/Indicators" Condition="Exists('Indicators/FKS_AI.cs')" />
    <Copy SourceFiles="Indicators/FKS_AO.cs" DestinationFolder="$(PackageDir)/temp/bin/Custom/Indicators" Condition="Exists('Indicators/FKS_AO.cs')" />
    <Copy SourceFiles="Indicators/FKS_Dashboard.cs" DestinationFolder="$(PackageDir)/temp/bin/Custom/Indicators" Condition="Exists('Indicators/FKS_Dashboard.cs')" />
    <Copy SourceFiles="Indicators/FKS_PythonBridge.cs" DestinationFolder="$(PackageDir)/temp/bin/Custom/Indicators" Condition="Exists('Indicators/FKS_PythonBridge.cs')" />
    
    <!-- Copy Strategies from Strategies subdirectory -->
    <Copy SourceFiles="Strategies/FKS_Strategy.cs" DestinationFolder="$(PackageDir)/temp/bin/Custom/Strategies" Condition="Exists('Strategies/FKS_Strategy.cs')" />

    <!-- Copy manifest -->
    <Copy SourceFiles="../manifest.xml" DestinationFolder="$(PackageDir)/temp" Condition="Exists('../manifest.xml')" />

    <Message Text="Package structure created in $(PackageDir)/temp" Importance="high" />
    <Message Text="Files copied from AddOns/, Indicators/, and Strategies/ subdirectories" Importance="high" />
  </Target>

</Project>